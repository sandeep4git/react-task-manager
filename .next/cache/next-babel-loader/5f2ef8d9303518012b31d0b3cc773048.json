{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sandeeptc/git/react/Next-practice/context/TaskListContext.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport { v1 as uuid } from \"uuid\";\nexport var TaskListContext = createContext();\n\nvar TaskListContextProvider = function TaskListContextProvider(props) {\n  _s();\n\n  var initialState = JSON.parse(localStorage.getItem('tasks')) || []; // { title: 'Read the book', id: 1 },\n  // { title: 'Wash the Car', id: 2 },\n  // { title: 'Build a React App', id: 3 },\n\n  var _useState = useState(initialState),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var _useState2 = useState(null),\n      editItem = _useState2[0],\n      setEditItem = _useState2[1];\n\n  useEffect(function () {\n    console.log('useEffect!');\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  var addTask = function addTask(title) {\n    setTasks([].concat(_toConsumableArray(tasks), [{\n      title: title,\n      id: Math.floor(Math.random() * 100)\n    }]));\n  };\n\n  var removeTask = function removeTask(id) {\n    setTasks(tasks.filter(function (task) {\n      return task.id !== id;\n    }));\n  };\n\n  var clearList = function clearList() {\n    setTasks([]);\n  };\n\n  var findItem = function findItem(id) {\n    var item = tasks.find(function (task) {\n      return task.id === id;\n    });\n    setEditItem(item);\n  };\n\n  var editTask = function editTask(title, id) {\n    var newTasks = tasks.map(function (task) {\n      return task.id === id ? {\n        title: title,\n        id: id\n      } : task;\n    });\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  return __jsx(TaskListContext.Provider, {\n    value: {\n      tasks: tasks,\n      addTask: addTask,\n      removeTask: removeTask,\n      clearList: clearList,\n      findItem: findItem,\n      editTask: editTask,\n      editItem: editItem\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\n_s(TaskListContextProvider, \"c6dstuSMuIYXCmjr2M62et3rxWM=\");\n\n_c = TaskListContextProvider;\nexport default TaskListContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListContextProvider\");","map":{"version":3,"sources":["/Users/sandeeptc/git/react/Next-practice/context/TaskListContext.js"],"names":["React","createContext","useState","useEffect","v1","uuid","TaskListContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","tasks","setTasks","editItem","setEditItem","console","log","setItem","stringify","addTask","title","id","Math","floor","random","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { v1 as uuid } from \"uuid\";\n\nexport const TaskListContext = createContext();\nconst TaskListContextProvider = (props) => {\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || []\n    // { title: 'Read the book', id: 1 },\n    // { title: 'Wash the Car', id: 2 },\n    // { title: 'Build a React App', id: 3 },\n\n    const [tasks, setTasks] = useState(initialState)\n    const [editItem, setEditItem] = useState(null);\n\n    useEffect(() => {\n        console.log('useEffect!');\n\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }, [tasks])\n\n    const addTask = (title) => {\n        setTasks([...tasks, { title, id: Math.floor(Math.random() * 100) }])\n    }\n    const removeTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id))\n    }\n    const clearList = () => {\n        setTasks([])\n    }\n    const findItem = (id) => {\n        const item = tasks.find(task => task.id === id);\n        setEditItem(item);\n    }\n    const editTask = (title, id) => {\n        const newTasks = tasks.map(task =>\n            (task.id === id) ? { title, id } : task\n        );\n        setTasks(newTasks);\n        setEditItem(null);\n    }\n\n    return (\n        <TaskListContext.Provider value={{\n            tasks,\n            addTask,\n            removeTask,\n            clearList,\n            findItem,\n            editTask,\n            editItem\n        }}>\n            {props.children}\n        </TaskListContext.Provider>\n    )\n}\n\nexport default TaskListContextProvider;"]},"metadata":{},"sourceType":"module"}