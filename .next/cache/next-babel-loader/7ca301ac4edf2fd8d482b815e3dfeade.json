{"ast":null,"code":"var _jsxFileName = \"/Users/sandeeptc/git/react/Next-practice/context/TaskListContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState } from 'react';\nimport { v1 as uuid } from \"uuid\";\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = props => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([{\n    title: 'Read the book',\n    id: 1\n  }, {\n    title: 'Wash the Car',\n    id: 2\n  }, {\n    title: 'Build a React App',\n    id: 3\n  }]);\n\n  const addTask = title => {\n    setTasks([...tasks, {\n      title,\n      id: Math.floor(Math.random() * 100)\n    }]);\n  };\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearList = () => {\n    setTasks([]);\n  };\n\n  return __jsx(TaskListContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TaskListContextProvider;","map":{"version":3,"sources":["/Users/sandeeptc/git/react/Next-practice/context/TaskListContext.js"],"names":["React","createContext","useState","v1","uuid","TaskListContext","TaskListContextProvider","props","tasks","setTasks","title","id","addTask","Math","floor","random","removeTask","filter","task","clearList","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,EAArC;;AACP,MAAMK,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,CAC/B;AAAEQ,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,EAAE,EAAE;AAA9B,GAD+B,EAE/B;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,EAAE,EAAE;AAA7B,GAF+B,EAG/B;AAAED,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,EAAE,EAAE;AAAlC,GAH+B,CAAD,CAAlC;;AAMA,QAAMC,OAAO,GAAIF,KAAD,IAAW;AACvBD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEE,MAAAA,KAAF;AAASC,MAAAA,EAAE,EAAEE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAAb,KAAX,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACvBF,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMQ,SAAS,GAAG,MAAM;AACpBV,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAGA,SACI,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAF;AAASI,MAAAA,OAAT;AAAkBI,MAAAA;AAAlB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACa,QADX,CADJ;AAKH,CArBD;;AAuBA,eAAed,uBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { v1 as uuid } from \"uuid\";\n\nexport const TaskListContext = createContext();\nconst TaskListContextProvider = (props) => {\n    const [tasks, setTasks] = useState([\n        { title: 'Read the book', id: 1 },\n        { title: 'Wash the Car', id: 2 },\n        { title: 'Build a React App', id: 3 },\n    ])\n\n    const addTask = (title) => {\n        setTasks([...tasks, { title, id: Math.floor(Math.random() * 100) }])\n    }\n    const removeTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id))\n    }\n    const clearList = () => {\n        setTasks([])\n    }\n    return (\n        <TaskListContext.Provider value={{ tasks, addTask, removeTask }}>\n            {props.children}\n        </TaskListContext.Provider>\n    )\n}\n\nexport default TaskListContextProvider;"]},"metadata":{},"sourceType":"module"}