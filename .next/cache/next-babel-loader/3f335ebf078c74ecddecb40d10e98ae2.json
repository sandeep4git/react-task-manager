{"ast":null,"code":"var _jsxFileName = \"/Users/sandeeptc/git/react/Next-practice/context/TaskListContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState } from 'react';\nimport { v1 as uuid } from \"uuid\";\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = props => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState([{\n    title: 'Read the book',\n    id: 1\n  }, {\n    title: 'Wash the Car',\n    id: 2\n  }, {\n    title: 'Build a React App',\n    id: 3\n  }]);\n  const {\n    0: editItem,\n    1: setEditItem\n  } = useState(null);\n\n  const addTask = title => {\n    setTasks([...tasks, {\n      title,\n      id: Math.floor(Math.random() * 100)\n    }]);\n  };\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const clearList = () => {\n    setTasks([]);\n  };\n\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id);\n    setEditItem(item);\n  };\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map(task => task.id === id ? {\n      title,\n      id\n    } : task);\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  return __jsx(TaskListContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask,\n      clearList,\n      findItem,\n      editTask,\n      editItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TaskListContextProvider;","map":{"version":3,"sources":["/Users/sandeeptc/git/react/Next-practice/context/TaskListContext.js"],"names":["React","createContext","useState","v1","uuid","TaskListContext","TaskListContextProvider","props","tasks","setTasks","title","id","editItem","setEditItem","addTask","Math","floor","random","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,EAArC;;AACP,MAAMK,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,CAC/B;AAAEQ,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,EAAE,EAAE;AAA9B,GAD+B,EAE/B;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,EAAE,EAAE;AAA7B,GAF+B,EAG/B;AAAED,IAAAA,KAAK,EAAE,mBAAT;AAA8BC,IAAAA,EAAE,EAAE;AAAlC,GAH+B,CAAD,CAAlC;AAKA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMY,OAAO,GAAIJ,KAAD,IAAW;AACvBD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEE,MAAAA,KAAF;AAASC,MAAAA,EAAE,EAAEI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B;AAAb,KAAX,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAIP,EAAD,IAAQ;AACvBF,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMU,SAAS,GAAG,MAAM;AACpBZ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAGA,QAAMa,QAAQ,GAAIX,EAAD,IAAQ;AACrB,UAAMY,IAAI,GAAGf,KAAK,CAACgB,IAAN,CAAWJ,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAA/B,CAAb;AACAE,IAAAA,WAAW,CAACU,IAAD,CAAX;AACH,GAHD;;AAIA,QAAME,QAAQ,GAAG,CAACf,KAAD,EAAQC,EAAR,KAAe;AAC5B,UAAMe,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CAAUP,IAAI,IAC1BA,IAAI,CAACT,EAAL,KAAYA,EAAb,GAAmB;AAAED,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAnB,GAAmCS,IADtB,CAAjB;AAGAX,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACAb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAND;;AAQA,SACI,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAC7BL,MAAAA,KAD6B;AAE7BM,MAAAA,OAF6B;AAG7BI,MAAAA,UAH6B;AAI7BG,MAAAA,SAJ6B;AAK7BC,MAAAA,QAL6B;AAM7BG,MAAAA,QAN6B;AAO7Bb,MAAAA;AAP6B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKL,KAAK,CAACqB,QATX,CADJ;AAaH,CA1CD;;AA4CA,eAAetB,uBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { v1 as uuid } from \"uuid\";\n\nexport const TaskListContext = createContext();\nconst TaskListContextProvider = (props) => {\n    const [tasks, setTasks] = useState([\n        { title: 'Read the book', id: 1 },\n        { title: 'Wash the Car', id: 2 },\n        { title: 'Build a React App', id: 3 },\n    ])\n    const [editItem, setEditItem] = useState(null);\n\n    const addTask = (title) => {\n        setTasks([...tasks, { title, id: Math.floor(Math.random() * 100) }])\n    }\n    const removeTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id))\n    }\n    const clearList = () => {\n        setTasks([])\n    }\n    const findItem = (id) => {\n        const item = tasks.find(task => task.id === id);\n        setEditItem(item);\n    }\n    const editTask = (title, id) => {\n        const newTasks = tasks.map(task =>\n            (task.id === id) ? { title, id } : task\n        );\n        setTasks(newTasks);\n        setEditItem(null);\n    }\n\n    return (\n        <TaskListContext.Provider value={{\n            tasks,\n            addTask,\n            removeTask,\n            clearList,\n            findItem,\n            editTask,\n            editItem\n        }}>\n            {props.children}\n        </TaskListContext.Provider>\n    )\n}\n\nexport default TaskListContextProvider;"]},"metadata":{},"sourceType":"module"}